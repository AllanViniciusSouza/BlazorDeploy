@page "/login"
@inject ApiService _apiService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <InputText @bind-Value="loginModel.Email" placeholder="Email" class="form-control mb-2" />
    <InputText @bind-Value="loginModel.Senha" type="password" placeholder="Senha" class="form-control mb-2" />
    <button class="btn btn-primary">Entrar</button>
</EditForm>

@if (!string.IsNullOrEmpty(mensagemErro))
{
    <p class="text-danger">@mensagemErro</p>
}

@code {
    private Login loginModel = new();
    private string mensagemErro;

    private async Task HandleLogin()
    {
        var usuario = await _apiService.Login(loginModel.Email, loginModel.Senha);

            if (usuario.Data != null)
            {
                await JS.InvokeVoidAsync("sessionStorage.setItem", "Email", loginModel.Email); // ou outro campo
            Navigation.NavigateTo("");
            }

        
        else
        {
            mensagemErro = "Usuário ou senha inválidos.";
        }
    }
}
